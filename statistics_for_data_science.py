# -*- coding: utf-8 -*-
"""Statistics for Data Science.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13WgKwqNjNjrxIiIcrOJjQ5z8p7R2KxIQ
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt


# %matplotlib inline

df = pd.DataFrame({
    'movie': ['A', 'B', 'A', 'C', 'E', 'B', 'E', 'A', 'I', 'C', 'I'],
    'rating': [9,7,9,5,9,3,2,9,6,9,9]

})

df['rating'].mean()

df.rating.mean()

#Mean is the average of a dataset's column values

#Median is the middle number when the values are sorted

#Mode is the most frequent value

sns.displot(df, kde=True, rug=True)
plt.axvline(np.mean(df.rating), color='r', linestyle='-')
plt.axvline(np.median(df.rating), color='g', linestyle='-')
plt.axvline(df.rating.mode().values[0], color='y', linestyle='-')

f, (ax_box, ax_hist) = plt.subplots(2, sharex=True,
                                    gridspec_kw={'height_ratios':(0.2, 1)})
mean = np.mean(df.rating)
median = np.median(df.rating)
mode = df.rating.mode().values[0]

sns.boxplot(data=df, x='rating', ax=ax_box)
ax_box.axvline(mean, color='r', linestyle='-')
ax_box.axvline(median, color='g', linestyle='-')
ax_box.axvline(mode, color='b', linestyle='-')

sns.histplot(data=df, x='rating', ax=ax_box, kde= True)
ax_hist.axvline(mean, color='r', linestyle='-', label="Mean")
ax_hist.axvline(median, color='g', linestyle='-', label="Median")
ax_hist.axvline(mode, color='b', linestyle='-', label="Mode")

ax_hist.legend()
ax_box.set(xlabel='')
plt.show()

df.rating.var()

df.rating.std()

#The lower the standard deviation, means the values are distributed closely to the mean

mean = df.groupby(['movie'])['rating'].mean()
std = df.groupby(['movie'])['rating'].std()

mean

std

fig, ax = plt.subplots()
mean.plot.bar(yerr=std, ax=ax, capsize=4)

df1 = pd.DataFrame({'pop_sample':range(20)})

df1.sample(5).mean()

df1.mean()

from scipy import stats
stats.sem(df1)

df2 = sns.load_dataset('tips')
sns.set_theme(style='whitegrid')
ax = sns.boxplot(x='day', y='total_bill', data=df2)

ax = sns.boxplot(x='day', y='total_bill', data=df2)
ax = sns.swarmplot(x='day', y='total_bill', data=df2, color='0.25')

print(df2['total_bill'].quantile([0.05, 0.25, 0.5, 0.75]))

print(df2['total_bill'].quantile(0.75)-df2['total_bill'].quantile(0.25))

#Co variance is when two variables varies with each other

#Co relation is when change in one variable causes a change in the other variable and vice versa

df3 = sns.load_dataset('iris')
fig, ax= plt.subplots(figsize=(6,6))

ax = sns.heatmap(df3.corr(), vmin=-1, vmax=1,
                 cmap=sns.diverging_palette(20,220, as_cmap=True), ax=ax)
plt.tight_layout()
plt.show()

a = [11,12,22,11]
b=[7,8,9,10]
c=[10,11,22,23]
arr = np.array([a,b,c])

cov_matrix = np.cov(arr, bias=True)
cov_matrix

sns.heatmap(cov_matrix, annot=True, fmt='g')
plt.show()

df.skew()

df.kurtosis()

norm1 = np.arange(-5,5,0.001)
mean = 0.0
std = 1.0
pdf = stats.norm.pdf(norm1, mean, std)
plt.plot(norm1, pdf)
plt.show()

import pylab
stats.probplot(df3.sepal_length, plot = pylab)

sns.kdeplot(df3.sepal_length)

#Binomial distribution is discrete distribution

from scipy.stats import binom
n=6
p=0.5
r_value = list(range(n+1))
dist = [binom.pmf(r, n, p) for r in r_value]
plt.bar(r_value, dist)
plt.show()

s = np.random.poisson(5, 10000)
count, bins, ignored = plt.hist(s, 10, density=True)
plt.show()

import statsmodels.stats.api as sms
sms.DescrStatsW(df3.sepal_length).tconfint_mean()

fig, ax = plt.subplots()
ax2 = ax.twinx()
n, bins, patches = ax.hist(df3.sepal_length, bins=100)
n, bins, patches = ax2.hist(df3.sepal_length, cumulative=1, histtype='step',
                            bins=100, color='g')

plt.hist(df3.sepal_length, cumulative=True, label='CDF', histtype='step',
         alpha=0.8, color='r')

cdf = stats.norm.cdf(norm1)
plt.plot(norm1, cdf)
plt.show()

ax = sns.displot(df3.sepal_length)

